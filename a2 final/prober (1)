#! /usr/bin/python
from easysnmp import Session
from math import ceil
import sys
import time
import easysnmp
credlist = sys.argv
#print credlist
#print len(sys.argv)

cred = str(credlist[1]).split(":")
freq = float(credlist[2])
freqtim = 1/freq
samples = credlist[3]
samcnt = 0
x = []
y =[]
time1 = ''
time2 =''
output = []
output2 = []
snmpdata =[]
snmpdata2 =[]
oid1 = ['1.3.6.1.2.1.1.3.0']
oidslist = credlist[4:len(credlist)]
oids = oid1 + oidslist

def getdata():

    for i in range(1,len(oids)):
        if snmpdata[i].value!="NOSUCHINSTANCE" and snmpdata2[i].value!="NOSUCHINSTANCE":
            y =int(snmpdata[i].value)
            snmptype =str(snmpdata[i].snmp_type)
            x =int(snmpdata2[i].value)
            if (x > y) and snmptype == "COUNTER":
                k = ((2**32 +y) - x)/(time1 - time2)
                output.append(k)
            elif (x > y) and snmptype == "COUNTER64":
                k = ((2**64 +y) - x)/(time1 - time2)
                output.append(k)
            else:
                k = (y - x)/(time1 - time2)
                output.append(k)
        else:
            print starttime,"|" 
    
    if len(output)!=0:
        output2 = [str(get) for get in output]
        print starttime ,'|', ("| " . join(output2))

beforestart = time.time()



while (samcnt != int(samples)):
    starttime = time.time()
    #session = Session(hostname=cred[0], community=cred[2], version=2,timeout=2,retries=1)
    #session = Session(hostname=cred[0], remote_port = cred[1], community=cred[2], version=2,timeout=2,retries=1)
    try:
	  session = Session(hostname=cred[0], remote_port = cred[1], community=cred[2], version=2,timeout=5,retries=1)
	  snmpdata = session.get(oids)
    except easysnmp.exceptions.EasySNMPTimeoutError:
          #print "timeout"
          continue
         
    
    if len(snmpdata) == len(snmpdata2):
        if int(snmpdata[0].value)<int(snmpdata2[0].value):
           print "reeboot"
           snmpdata=[]
           snmpdata2=[]
           t0=time.time()
        else:
         if freqtim < 1:
            time1 =float(snmpdata[0].value)/100
            time2 =float(snmpdata2[0].value)/100
         else:
            time1 =int(snmpdata[0].value)/100
            time2 =int(snmpdata2[0].value)/100
         getdata()
         samcnt = samcnt+1
    snmpdata2 = snmpdata[:]
    del output[:]
    endtime =time.time() 
    k1 =ceil((endtime - beforestart)/freqtim)
    sleep1 = (beforestart +k1*freqtim) - endtime
    if sleep1<=0.0:
        sleep1 = (beforestart+(k1+1)*freqtim) - endtime
        time.sleep(sleep1)
        #print "kgjj"
    else:
        sleep1 = (beforestart+k1*freqtim) - endtime
        time.sleep(sleep1)
    
